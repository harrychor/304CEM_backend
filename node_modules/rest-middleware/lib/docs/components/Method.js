"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _VerbTabs = require("./VerbTabs");

var _VerbTabs2 = _interopRequireDefault(_VerbTabs);

var _Arguments = require("./Arguments");

var _Arguments2 = _interopRequireDefault(_Arguments);

var _Markdown = require("./Markdown");

var _Markdown2 = _interopRequireDefault(_Markdown);

/**
 * The documentation for a single method.
 */

var Method = (function (_React$Component) {
  _inherits(Method, _React$Component);

  function Method(props) {
    _classCallCheck(this, Method);

    _get(Object.getPrototypeOf(Method.prototype), "constructor", this).call(this, props);
    var method = this.props.method;

    var verb = _lodash2["default"].find(["get", "post", "put", "delete"], function (item) {
      return method[item] !== undefined;
    });
    this.state = { selectedVerb: verb };
  }

  _createClass(Method, [{
    key: "handleVerbChanged",
    value: function handleVerbChanged(e) {
      this.setState({ selectedVerb: e.verb });
    }
  }, {
    key: "render",
    value: function render() {
      var selectedVerb = this.state.selectedVerb;
      var method = this.props.method;

      var name = method.name;
      var params = method[selectedVerb].params;

      // Only provide a link if the method has a GET verb.
      var url = method.get ? _react2["default"].createElement(
        "a",
        { href: method.url, target: "_blank" },
        method.url
      ) : method.url;

      var description = method.description ? _react2["default"].createElement(
        "p",
        null,
        _react2["default"].createElement(
          _Markdown2["default"],
          null,
          method.description
        )
      ) : null;

      var codeSample = "";
      if (params) {
        codeSample = params.map(function (item) {
          return item.name;
        }).join(", ");
      }
      codeSample = "server.methods." + name + "." + selectedVerb + "(" + codeSample + ");";

      return _react2["default"].createElement(
        "div",
        { className: "method" },
        _react2["default"].createElement(
          "div",
          { className: "content-outer" },
          _react2["default"].createElement(
            "a",
            { name: name, id: name, className: "section-anchor" },
            _react2["default"].createElement(
              "h1",
              null,
              method.name
            )
          ),
          description,
          _react2["default"].createElement(_VerbTabs2["default"], {
            method: method,
            selectedVerb: selectedVerb,
            onChanged: this.handleVerbChanged.bind(this) }),
          _react2["default"].createElement(
            "pre",
            null,
            selectedVerb.toUpperCase(),
            ": ",
            url
          ),
          _react2["default"].createElement(
            "pre",
            null,
            codeSample
          ),
          _react2["default"].createElement(_Arguments2["default"], { method: method, params: params })
        )
      );
    }
  }]);

  return Method;
})(_react2["default"].Component);

exports["default"] = Method;
module.exports = exports["default"];